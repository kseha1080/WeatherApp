{"version":3,"sources":["reducers/weatherReducers.js","reducers/loadingReducers.js","reducers/unitFormatReducers.js","reducers/paginationReducers.js","reducers/index.js","actions/actionTypes.js","app/store.js","components/Loader/index.js","components/Loader/loaderStyles.js","views/AppContainer/index.js","api/index.js","components/RadioGroupComponent/index.js","components/RadioGroupComponent/radioGroupComponentStyles.js","components/PaginationButtons/index.js","components/PaginationButtons/paginationButtonStyles.js","components/WeatherCardLayout/components/WeatherCard.js","components/WeatherCardLayout/components/weatherCardStyles.js","actions/index.js","components/WeatherCardLayout/index.js","components/WeatherCardLayout/weatherCardLayoutStyles.js","components/BarChart/components/BarComponent.js","components/BarChart/components/barComponentStyles.js","components/BarChart/index.js","components/BarChart/barChartStyles.js","constants/index.js","views/Main/index.js","utils/index.js","app/App.js","index.js"],"names":["INIT_STATE","weatherData","paginatedWeatherData","selectedWeatherDay","loading","unitFormat","pageNo","combineReducers","weatherReducers","state","action","type","payload","loadingReducers","unitFormatReducers","paginationReducers","middleware","applyMiddleware","thunk","createLogger","store","createStore","rootReducer","withStyles","loaderContainer","padding","margin","position","top","left","transform","textAlign","backgroundColor","width","height","zIndex","opacity","loaderWrapper","loader","classes","Box","className","Spinner","color","size","connect","requestLoading","children","Container","weatherApi","process","radioFormControl","marginTop","radioOptions","selectedValue","handleChangeState","renderRadioOptions","map","option","FormControlLabel","key","value","control","Radio","label","labelPlacement","FormControl","component","RadioGroup","aria-label","name","onChange","e","target","row","buttonsContainer","display","justifyContent","containerGrid","paginationButton","border","borderRight","data","setPageNo","renderPreviousBtn","Button","style","borderRightColor","onClick","renderPagination","length","renderNextBtn","ButtonGroup","Typography","weatherCard","marginBottom","setSelectedWeatherDay","selectedWeather","dispatch","renderUnitFormat","formattedDate","moment","date","format","Card","CardActionArea","CardContent","gutterBottom","variant","meanTemp","weatherDescription","meanHumidity","layoutContainer","flexWrap","renderWeatherCard","weatherObj","barComponentWrapper","barComponentContent","bottom","barComponentBar","roundedTemp","Math","round","main","temp","chartPixel","smallScreenSize","useMediaQuery","barText","customStyles","barStyles","fontSize","Grid","time","barChartContainer","barChartTitleWrapper","barCharTitle","barChartWrapper","formattedSelectedDay","renderBarComponent","weatherObjByDay","weatherDataByTime","weatherObjByTime","dt_txt","mapDataToBarComponent","unitFormatOptions","Main","getNewWeatherData","newUnitFormat","props","setRadioState","getWeatherData","constructPaginatedWeatherData","pageSize","dataPage","push","indexOf","this","undefined","trim","prevProps","getPaginatedWeatherData","container","direction","justify","alignItems","PureComponent","axios","get","API","then","res","reconstructedWeatherData","groupedWeatherData","dayWeatherData","newWeatherData","weatherObjDate","unix","dt","utc","weatherObjTime","weatherArray","humidity","weather","recontructWeatherData","list","catch","err","finally","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"iyBAMA,IAAMA,EAAa,CACjBC,YAAa,GACbC,qBAAsB,GACtBC,mBAAoB,I,yjBCPtB,IAAMH,EAAa,CACjBI,SAAS,G,yjBCDX,IAAMJ,EAAa,CACjBK,WAAY,Y,yjBCDd,IAAML,EAAa,CACjBM,OAAQ,GCGKC,cAAgB,CAC7BC,gBJKa,WAAiC,IAAhCC,EAA+B,uDAAvBT,EAAYU,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IKb4B,mBLc1B,OAAO,EAAP,GACKF,EADL,CAEER,YAAaS,EAAOE,UAExB,IKjBsC,6BLkBpC,OAAO,EAAP,GACKH,EADL,CAEEP,qBAAsBQ,EAAOE,UAEjC,IKNoC,2BLOlC,OAAO,EAAP,GACKH,EADL,CAEEN,mBAAoBO,EAAOE,UAE/B,QACE,OAAO,EAAP,GACKH,KIvBTI,gBHFa,WAAiC,IAAhCJ,EAA+B,uDAAvBT,EAAYU,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IIHyB,gBJIvB,OAAO,KACFF,EADL,CAEEL,SAAS,IAEb,IIP4B,mBJQ1B,OAAO,KACFK,EADL,CAEEL,SAAS,IAEb,QACE,OAAO,KACFK,KGXTK,mBFHa,WAAiC,IAAhCL,EAA+B,uDAAvBT,EAAYU,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IGI2B,kBHHzB,OAAO,KACFF,EADL,CAEEJ,WAAYK,EAAOE,UAEvB,QACE,OAAO,KACFH,KELTM,mBDJa,WAAiC,IAAhCN,EAA+B,uDAAvBT,EAAYU,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IEOuB,cFNrB,OAAO,KACFF,EADL,CAEEH,OAAQI,EAAOE,UAEnB,QACE,OAAO,KACFH,OGTLO,EAAaC,YAAgBC,IAAOC,0BAI3BC,EAFDC,YAAYC,EAAaN,G,kCCkBxBO,cC1BA,CACbC,gBAAiB,CACfC,QAAS,IACTC,OAAQ,IACRC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,UAAW,SACXC,gBAAiB,OACjBC,MAAO,QACPC,OAAQ,QACRC,OAAQ,MACRC,QAAS,OAEXC,cAAe,CACbV,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEbQ,OAAQ,CACNL,MAAO,OACPC,OAAQ,SDGGX,EAdA,SAAC,GAAiB,IAAfgB,EAAc,EAAdA,QAChB,OACE,kBAACC,EAAA,EAAD,CAAKC,UAAWF,EAAQf,iBACtB,kBAACgB,EAAA,EAAD,CAAKC,UAAWF,EAAQF,eACtB,kBAACK,EAAA,EAAD,CAASD,UAAWF,EAAQD,OAAQK,MAAM,UAAUC,KAAK,YEUlDC,eAJS,SAAC,GAAD,MAA0B,CAChDC,eADsB,EAAGjC,gBACOT,WAGnByC,EAjBM,SAAC,GAAkC,IAAhCE,EAA+B,EAA/BA,SAAUD,EAAqB,EAArBA,eAChC,OACE,kBAACE,EAAA,EAAD,KACGF,GAAkB,kBAAC,EAAD,MAClBC,M,kECXME,EAAU,4EAFRC,mCAEQ,W,qDC6CR3B,cC/CA,CACb4B,iBAAkB,CAChBC,UAAW,OACX1B,OAAQ,WD4CGH,EAlCa,SAAC,GAKtB,IAJLgB,EAII,EAJJA,QACAc,EAGI,EAHJA,aACAC,EAEI,EAFJA,cACAC,EACI,EADJA,kBAEMC,EAAqBH,EAAaI,KAAI,SAACC,GAC3C,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAOG,MACZA,MAAOH,EAAOG,MACdC,QAAS,kBAACC,EAAA,EAAD,CAAOpB,MAAM,YACtBqB,MAAON,EAAOM,MACdC,eAAgBP,EAAOO,oBAK7B,OACE,kBAACC,EAAA,EAAD,CAAaC,UAAU,WAAW1B,UAAWF,EAAQY,kBAEnD,kBAACiB,EAAA,EAAD,CACEC,aAAW,WACXC,KAAK,WACLT,MAAOP,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAkBiB,EAAEC,OAAOZ,QAC5Ca,KAAG,GAEFlB,O,mEEoBMjC,eC7DA,CACboD,iBAAkB,CAChBC,QAAS,OACTC,eAAgB,eAChB5C,MAAO,MACPP,OAAQ,SACR0B,UAAW,QAEb0B,cAAe,CACb7C,MAAO,OACPF,UAAW,UAEbgD,iBAAkB,CAChBC,OAAQ,oBACRhD,gBAAiB,UACjBW,MAAO,OACP,UAAW,CACTX,gBAAiB,UACjBiD,YAAa,uBD2CJ1D,EA9CW,SAAC,GAA0C,IAAxCgB,EAAuC,EAAvCA,QAAS2C,EAA8B,EAA9BA,KAAM5E,EAAwB,EAAxBA,OAAQ6E,EAAgB,EAAhBA,UAW5CC,EAAoB9E,EAAS,GACjC,kBAAC+E,EAAA,EAAD,CACE1C,MAAM,UACN2C,MAAO,CAAEC,iBAAkB,SAC3BC,QAdmB,WAErBL,EADkB7E,EAAS,IAczBmC,UAAWF,EAAQwC,kBAEnB,kBAAC,KAAD,OAIEU,EACJP,GAAQA,EAAKQ,OAAb,UAAyBpF,EAAzB,eAAsC4E,EAAKQ,QAAW,SAElDC,EAAgBrF,IAAW4E,EAAKQ,QACpC,kBAACL,EAAA,EAAD,CAAQG,QApBS,WAEjBL,EADkB7E,EAAS,IAmBEmC,UAAWF,EAAQwC,kBAC9C,kBAAC,KAAD,OAIJ,OACE,kBAACa,EAAA,EAAD,CAAajD,MAAM,UAAUF,UAAWF,EAAQoC,kBAC9C,kBAACnC,EAAA,EAAD,CAAKC,UAAWF,EAAQuC,eACvBM,GAED,kBAAC5C,EAAA,EAAD,CAAKC,UAAWF,EAAQuC,eACtB,kBAACe,EAAA,EAAD,CAAYlD,MAAM,eAAe8C,IAEnC,kBAACjD,EAAA,EAAD,CAAKC,UAAWF,EAAQuC,eACvBa,O,wCECQpE,gBCxDA,CACbuE,YAAa,CACXC,aAAc,SDsDHxE,CACbsB,aALsB,SAAC,GAAD,MAA6B,CACnDxC,WADsB,EAAGS,mBACMT,cAIN,CAAE2F,sBELQ,SAACC,GAAD,OAAqB,SAACC,GACzDA,EAAS,CAAEvF,KZnC2B,2BYmCKC,QAASqF,OFIpDpD,EAvCkB,SAAC,GAA0D,IAAxDN,EAAuD,EAAvDA,QAAS2C,EAA8C,EAA9CA,KAAM7E,EAAwC,EAAxCA,WAAY2F,EAA4B,EAA5BA,sBAC1CG,EAAkC,aAAf9F,EAA4B,IAAM,IAErD+F,EAAgBC,IAAOnB,EAAKoB,MAAMC,OAAO,MAE/C,OACE,kBAACC,GAAA,EAAD,CAAM/D,UAAWF,EAAQuD,YAAalC,IAAKsB,EAAKoB,KAAMd,QAAS,kBAAMQ,EAAsBd,EAAKoB,QAC9F,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAYc,cAAY,EAACxC,UAAU,MAChCiC,GAEH,kBAACP,EAAA,EAAD,CAAYe,QAAQ,QAAQjE,MAAM,gBAAgBwB,UAAU,KAA5D,UACMe,EAAK2B,SADX,kBACwBV,IAExB,kBAACN,EAAA,EAAD,CAAYe,QAAQ,QAAQjE,MAAM,gBAAgBwB,UAAU,KACzDe,EAAK4B,oBAER,kBAACjB,EAAA,EAAD,CAAYe,QAAQ,QAAQjE,MAAM,gBAAgBwB,UAAU,KAA5D,oBACgBe,EAAK6B,sBGDhBxF,eCpCA,CACbyF,gBAAiB,CACfpC,QAAS,OACTC,eAAgB,eAChBzB,UAAW,OACX6D,SAAU,SD+BC1F,EAvBW,SAAC,GAA+B,IAA7BgB,EAA4B,EAA5BA,QAAS2C,EAAmB,EAAnBA,KAAM5E,EAAa,EAAbA,OAOpC4G,EACJhC,GAAQA,EAAKQ,OAA8BR,EAAK5E,GAN7BmD,KAAI,SAAC0D,GACtB,OAAO,kBAAC,GAAD,CAAavD,IAAKuD,EAAWb,KAAMpB,KAAMiC,OAKS,KAE7D,OACE,kBAACnE,EAAA,EAAD,CAAWP,UAAWF,EAAQyE,iBAC3BE,M,UEsCQ3F,eC/DA,CACb6F,oBAAqB,CACnBzF,SAAU,WACVO,OAAQ,QACRD,MAAO,OACPF,UAAW,UAEbsF,oBAAqB,CACnB1F,SAAU,WACV2F,OAAQ,IACRrF,MAAO,QAETsF,gBAAiB,CACfvF,gBAAiB,UACjBN,OAAQ,WDiDGH,CACbsB,aALsB,SAAC,GAAD,MAA6B,CACnDxC,WADsB,EAAGS,mBACMT,cAI/BwC,EAlDmB,SAAC,GAAmC,IAAjCN,EAAgC,EAAhCA,QAAS2C,EAAuB,EAAvBA,KAAM7E,EAAiB,EAAjBA,WAC/B8F,EAAkC,aAAf9F,EAA4B,IAAM,IAErDmH,EAAcC,KAAKC,MAAMxC,EAAKyC,KAAKC,MACnCC,EAA4B,aAAfxH,EAA4B,IAAM,GAE/CyH,EAAkBC,aAAc,qBAEhCC,EAAUF,EAAkB,SAAW,OAEvCG,EAAe,CACnBC,UAAW,CACTjG,MALa6F,EAAkB,SAAW,OAM1C5F,OAAO,GAAD,OAAKsF,EAAcK,EAAnB,OAERG,QAAS,CACPG,SAAUH,IAId,OACE,kBAACI,EAAA,EAAD,CAAM3F,UAAWF,EAAQ6E,qBACvB,kBAAC5E,EAAA,EAAD,CAAKC,UAAWF,EAAQ8E,qBACtB,kBAACxB,EAAA,EAAD,CACEP,MAAO2C,EAAaD,QACpB7D,UAAU,KAFZ,UAGKqD,EAHL,kBAGqBrB,IACrB,kBAAC3D,EAAA,EAAD,CACEC,UAAWF,EAAQgF,gBACnBjC,MAAO2C,EAAaC,YAEtB,kBAACrC,EAAA,EAAD,CAAYP,MAAO2C,EAAaD,QAAS7D,UAAU,KAChDe,EAAKmD,YEYD9G,eC1DA,CACb+G,kBAAmB,CACjB5G,OAAQ,UAEV6G,qBAAsB,CACpBxG,UAAW,UAEbyG,aAAc,CACZL,SAAU,UAEZM,gBAAiB,CACf7D,QAAS,OACTC,eAAgB,eAChBzB,UAAW,SD6CA7B,EA1CE,SAAC,GAA2C,IAAzCgB,EAAwC,EAAxCA,QAASpC,EAA+B,EAA/BA,mBAAoB+E,EAAW,EAAXA,KACzCwD,EACJvI,GAAsBkG,IAAOlG,GAAoBoG,OAAO,MAiBpDoC,EACJzD,GAAQA,EAAKQ,QAAUvF,EAhBK,SAAC+E,EAAM/E,GAAwB,IAAD,uBAC1D,YAA4B+E,EAA5B,+CAAkC,CAAC,IAA1B0D,EAAyB,QAChC,GAAIA,EAAgBtC,OAASnG,EAC3B,OAAOyI,EAAgBC,kBAAkBpF,KAAI,SAACqF,GAC5C,OACE,kBAAC,GAAD,CACElF,IAAKkF,EAAiBC,OACtB7D,KAAM4D,QAP0C,mFAiBtDE,CAAsB9D,EAAM/E,GAC5B,KAEN,OACE,kBAAC6C,EAAA,EAAD,CAAWP,UAAWF,EAAQ+F,mBAC5B,kBAACF,EAAA,EAAD,CAAM3F,UAAWF,EAAQgG,sBACvB,kBAAC1C,EAAA,EAAD,CAAYpD,UAAWF,EAAQiG,aAAcrE,UAAU,MACpDuE,IAGL,kBAACN,EAAA,EAAD,CAAM3F,UAAWF,EAAQkG,iBAAkBE,OE/CpCM,GAAoB,CAC/B,CACEpF,MAAO,SACPG,MAAO,UACPC,eAAgB,OAElB,CACEJ,MAAO,WACPG,MAAO,aACPC,eAAgB,QCkBdiF,G,2MAoBJC,kBAAoB,SAACC,GAAmB,IAAD,EACK,EAAKC,MAAvCC,EAD6B,EAC7BA,cAAeC,EADc,EACdA,eACvBD,EAAcF,GACdG,EAAeH,I,EAIjBI,8BAAgC,SAACvJ,EAAawJ,GAC5C,IAAIvJ,EAAuB,GACvBwJ,EAAW,GAF0C,uBAIzD,YAAuBzJ,EAAvB,+CAAoC,CAAC,IAA5BkH,EAA2B,QAC9BuC,EAAShE,SAAW+D,IACtBvJ,EAAqByJ,KAAKD,GAC1BA,EAAW,IAEbA,EAASC,KAAKxC,GACVlH,EAAY2J,QAAQzC,KAAgBlH,EAAYyF,OAAS,GAC3DxF,EAAqByJ,KAAKD,IAX2B,kFAezD,OAAOxJ,G,mFAzCY,IAAD,EACqB2J,KAAKR,MAApChJ,EADU,EACVA,WAAYkJ,EADF,EACEA,oBACDO,IAAfzJ,GAAkD,KAAtBA,EAAW0J,QACzCR,EAAelJ,K,yCAIA2J,GAEjB,GAAIA,EAAU/J,cAAgB4J,KAAKR,MAAMpJ,YAAa,CACpD,IAAMC,EAAuB2J,KAAKL,8BAChCK,KAAKR,MAAMpJ,YAdF,GAiBX4J,KAAKR,MAAMY,wBAAwB/J,M,+BA8B7B,IAAD,EAQH2J,KAAKR,MANPhJ,EAFK,EAELA,WACAJ,EAHK,EAGLA,YACAE,EAJK,EAILA,mBACAD,EALK,EAKLA,qBACAI,EANK,EAMLA,OACA6E,EAPK,EAOLA,UAGF,OACE,kBAACnC,EAAA,EAAD,KACE,kBAACoF,EAAA,EAAD,CAAM8B,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,EAAD,CACEhH,aAAc4F,GACd3F,cAAejD,EACfkD,kBAAmBsG,KAAKV,qBAG5B,kBAACf,EAAA,EAAD,CAAM8B,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,GAAD,CACEnF,KAAMhF,EACNI,OAAQA,EACR6E,UAAWA,KAGf,kBAACiD,EAAA,EAAD,CAAM8B,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,GAAD,CAAmBnF,KAAMhF,EAAsBI,OAAQA,EAAS,KAElE,kBAAC8H,EAAA,EAAD,CAAM8B,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,GAAD,CACEnF,KAAMjF,EACNE,mBAAoBA,U,GA7EbmK,iBA2GJzH,gBAZS,SAAC,GAAD,IACtBrC,EADsB,EACtBA,gBACAM,EAFsB,EAEtBA,mBACAC,EAHsB,EAGtBA,mBAHsB,MAIjB,CACLd,YAAaO,EAAgBP,YAC7BC,qBAAsBM,EAAgBN,qBACtCG,WAAYS,EAAmBT,WAC/BC,OAAQS,EAAmBT,OAC3BH,mBAAoBK,EAAgBL,sBAGE,CACtCoJ,eR/G4B,SAAClJ,GAAD,OAAgB,SAAC6F,GAC7CA,EARO,CAAEvF,KZZkB,kBYqB3B4J,IACGC,IADH,UACUC,EADV,kBACkCpK,IAC/BqK,MAAK,SAACC,GACL,IAAMC,ES1ByB,SAAC3K,GACpC,IAAI4K,EAAqB,GACrBC,EAAiB,GAGfC,EAAiB9K,EAAYwD,KAAI,SAAC0D,GACtC,IAAM6D,EAAiB3E,IACpB4E,KAAK9D,EAAW+D,IAChBC,MACA5E,OAAO,cACJ6E,EAAiB/E,IACpB4E,KAAK9D,EAAW+D,IAChBC,MACA5E,OAAO,WAGV,OAFAY,EAAWb,KAAO0E,EAClB7D,EAAWkB,KAAO+C,EACXjE,KAhB2C,uBAoBpD,YAAuB4D,EAAvB,+CAAuC,CAAC,IAA/B5D,EAA8B,QAChC2D,EAAepF,OAGdoF,EAAe,GAAGxE,OAASa,EAAWb,MACxCwE,EAAenB,KAAKxC,GAChB4D,EAAenB,QAAQzC,KAAgB4D,EAAerF,OAAS,GACjEmF,EAAmBlB,KAAKmB,KAG1BD,EAAmBlB,KAAKmB,IACxBA,EAAiB,IACFnB,KAAKxC,IAVtB2D,EAAenB,KAAKxC,IAtB4B,kFA2DpD,OApByB0D,EAAmBpH,KAAI,SAAC4H,GAC/C,IAAIxE,EAAW,EACXE,EAAe,EAF6C,uBAGhE,YAAuBsE,EAAvB,+CAAqC,CAAC,IAA7BlE,EAA4B,QACnCN,GAAYM,EAAWQ,KAAKC,KAC5Bb,GAAgBI,EAAWQ,KAAK2D,UAL8B,kFAWhE,OAJAzE,GAAsBwE,EAAa3F,OACnCqB,GAA8BsE,EAAa3F,OAC3CmB,EAAWY,KAAKC,MAAMb,GACtBE,EAAeU,KAAKC,MAAMX,GACnB,CACLT,KAAM+E,EAAa,GAAG/E,KACtBO,WACAE,eACAD,mBAAoBuE,EAAa,GAAGE,QAAQ,GAAG5D,KAC/CkB,kBAAmBwC,MT7BcG,CAAsBb,EAAIzF,KAAKuG,MAChEvF,EAAS,CAAEvF,KZ7Be,mBY6BSC,QAASgK,OAE7Cc,OAAM,SAACC,GACNzF,EAAS,CAAEvF,KZxBQ,YYwBSC,QAAS+K,OAEtCC,SAAQ,WACP1F,EAfG,CAAEvF,KZfqB,0BoBkI9BsJ,wBRhGqC,SAAC/J,GAAD,OAA0B,SAACgG,GAChEA,EAAS,CAAEvF,KZvC6B,6BYuCKC,QAASV,MQgGtDoJ,cR7F2B,SAAC7I,GAAD,OAAW,SAACyF,GACvCA,EAAS,CAAEvF,KZjCkB,kBYiCKC,QAASH,MQ6F3C0E,UR1FuB,SAAC7E,GAAD,OAAY,SAAC4F,GACpCA,EAAS,CAAEvF,KZlCc,cYkCKC,QAASN,OQqF1BuC,CAKZqG,IEnHY2C,GAdH,WACV,OACE,kBAAC,IAAD,CAAUzK,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAO0K,OAAK,EAACC,KAAK,IAAI5H,UAAW+E,UCV7C8C,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6b36f887.chunk.js","sourcesContent":["import {\n  GET_WEATHER_DATA,\n  GET_PAGINATED_WEATHER_DATA,\n  SET_SELECTED_WEATHER_DAY,\n} from '../actions/actionTypes';\n\nconst INIT_STATE = {\n  weatherData: [],\n  paginatedWeatherData: [],\n  selectedWeatherDay: '',\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_WEATHER_DATA:\n      return {\n        ...state,\n        weatherData: action.payload,\n      };\n    case GET_PAGINATED_WEATHER_DATA:\n      return {\n        ...state,\n        paginatedWeatherData: action.payload,\n      };\n    case SET_SELECTED_WEATHER_DAY:\n      return {\n        ...state,\n        selectedWeatherDay: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { REQUEST_START, REQUEST_COMPLETE } from '../actions/actionTypes';\n\nconst INIT_STATE = {\n  loading: false,\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case REQUEST_COMPLETE:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { SET_RADIO_STATE } from '../actions/actionTypes';\n\nconst INIT_STATE = {\n  unitFormat: 'imperial',\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_RADIO_STATE:\n      return {\n        ...state,\n        unitFormat: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { SET_PAGE_NO } from '../actions/actionTypes';\n\nconst INIT_STATE = {\n  pageNo: 1,\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_PAGE_NO:\n      return {\n        ...state,\n        pageNo: action.payload,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { combineReducers } from 'redux';\nimport weatherReducers from './weatherReducers';\nimport loadingReducers from './loadingReducers';\nimport unitFormatReducers from './unitFormatReducers';\nimport paginationReducers from './paginationReducers';\n\nexport default combineReducers({\n  weatherReducers,\n  loadingReducers,\n  unitFormatReducers,\n  paginationReducers,\n})","// Weather Data\nexport const GET_WEATHER_DATA = 'GET_WEATHER_DATA';\nexport const GET_PAGINATED_WEATHER_DATA = 'GET_PAGINATED_WEATHER_DATA';\n\n// API request reducers\nexport const REQUEST_START = 'REQUEST_START';\nexport const REQUEST_COMPLETE = 'REQUEST_COMPLETE';\n\n// API error\nexport const API_ERROR = 'API_ERROR';\n\n// Set radio state\nexport const SET_RADIO_STATE = 'SET_RADIO_STATE';\n\n// Pagination\nexport const SET_PAGE_NO = 'SET_PAGE_NO';\n\n// Set selected weather info\nexport const SET_SELECTED_WEATHER_DAY = 'SET_SELECTED_WEATHER_DAY';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport rootReducer from '../reducers';\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nconst store = createStore(rootReducer, middleware);\n\nexport default store;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport { withStyles } from '@material-ui/core/styles';\n// import Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\n// Styles\nimport loaderStyles from './loaderStyles';\n\nconst Loader = ({ classes }) => {\n  return (\n    <Box className={classes.loaderContainer}>\n      <Box className={classes.loaderWrapper}>\n        <Spinner className={classes.loader} color='warning' size='lg' />\n      </Box>\n    </Box>\n  );\n};\n\nLoader.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default withStyles(loaderStyles)(Loader);\n","export default {\n  loaderContainer: {\n    padding: '0',\n    margin: '0',\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    textAlign: 'center',\n    backgroundColor: '#000',\n    width: '100vw',\n    height: '100vh',\n    zIndex: '999',\n    opacity: '0.9',\n  },\n  loaderWrapper: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  loader: {\n    width: '5rem',\n    height: '5rem',\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Container from '@material-ui/core/Container';\n\n// Custom components\nimport Loader from '../../components/Loader';\n\nconst AppContainer = ({ children, requestLoading }) => {\n  return (\n    <Container>\n      {requestLoading && <Loader />}\n      {children}\n    </Container>\n  );\n};\n\nAppContainer.propTypes = {\n  requestLoading: PropTypes.bool,\n};\n\nconst mapStateToProps = ({ loadingReducers }) => ({\n  requestLoading: loadingReducers.loading,\n});\n\nexport default connect(mapStateToProps)(AppContainer);\n","const apiKey = process.env.REACT_APP_API_KEY;\n\nexport const weatherApi = `http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=${apiKey}&cnt=40`;\n","import React from 'react';\n\n// Material UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n// import FormLabel from '@material-ui/core/FormLabel';\n\n// Custom styles\nimport radioGroupComponentStyles from './radioGroupComponentStyles';\n\nconst RadioGroupComponent = ({\n  classes,\n  radioOptions,\n  selectedValue,\n  handleChangeState,\n}) => {\n  const renderRadioOptions = radioOptions.map((option) => {\n    return (\n      <FormControlLabel\n        key={option.value}\n        value={option.value}\n        control={<Radio color='primary' />}\n        label={option.label}\n        labelPlacement={option.labelPlacement}\n      />\n    );\n  });\n\n  return (\n    <FormControl component='fieldset' className={classes.radioFormControl}>\n      {/* <FormLabel component=\"legend\">labelPlacement</FormLabel> */}\n      <RadioGroup\n        aria-label='position'\n        name='position'\n        value={selectedValue}\n        onChange={(e) => handleChangeState(e.target.value)}\n        row\n      >\n        {renderRadioOptions}\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default withStyles(radioGroupComponentStyles)(RadioGroupComponent);\n","export default {\n  radioFormControl: {\n    marginTop: '2rem',\n    margin: '0 auto',\n  },\n}","import React from 'react';\n\n// Material UI\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n// Icons\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nimport paginationButtonStyles from './paginationButtonStyles';\n\nconst PaginationButtons = ({ classes, data, pageNo, setPageNo }) => {\n  const handlePrevious = () => {\n    const newPageNo = pageNo - 1;\n    setPageNo(newPageNo);\n  };\n\n  const handleNext = () => {\n    const newPageNo = pageNo + 1;\n    setPageNo(newPageNo);\n  };\n\n  const renderPreviousBtn = pageNo > 1 && (\n    <Button\n      color='primary'\n      style={{ borderRightColor: 'unset' }}\n      onClick={handlePrevious}\n      className={classes.paginationButton}\n    >\n      <ArrowBackIcon />\n    </Button>\n  );\n\n  const renderPagination =\n    data && data.length ? `${pageNo} of ${data.length}` : '0 of 0';\n\n  const renderNextBtn = pageNo !== data.length && (\n    <Button onClick={handleNext} className={classes.paginationButton}>\n      <ArrowForwardIcon />\n    </Button>\n  );\n\n  return (\n    <ButtonGroup color='primary' className={classes.buttonsContainer}>\n      <Box className={classes.containerGrid}>\n      {renderPreviousBtn}\n      </Box>\n      <Box className={classes.containerGrid}>\n        <Typography color='textPrimary'>{renderPagination}</Typography>\n      </Box>\n      <Box className={classes.containerGrid}>\n      {renderNextBtn}\n      </Box>\n    </ButtonGroup>\n  );\n};\n\nexport default withStyles(paginationButtonStyles)(PaginationButtons);\n","export default {\n  buttonsContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    width: '90%',\n    margin: '0 auto',\n    marginTop: '3rem',\n  },\n  containerGrid: {\n    width: '4rem',\n    textAlign: 'center',\n  },\n  paginationButton: {\n    border: '1px solid #4685C5',\n    backgroundColor: '#4685C5',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#3073B6',\n      borderRight: '1px solid #4685C5'\n    }\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n// Actions\nimport { setSelectedWeatherDay } from '../../../actions';\n\n// Styles\nimport weatherCardStyles from './weatherCardStyles';\n\nconst WeatherCard = ({ classes, data, unitFormat, setSelectedWeatherDay }) => {\n  const renderUnitFormat = unitFormat === 'imperial' ? 'F' : 'C';\n\n  const formattedDate = moment(data.date).format('LL');\n\n  return (\n    <Card className={classes.weatherCard} key={data.date} onClick={() => setSelectedWeatherDay(data.date)}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom component='h4'>\n            {formattedDate}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {`${data.meanTemp}˚ ${renderUnitFormat}`}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {data.weatherDescription}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {`Humidity: ${data.meanHumidity}`}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nWeatherCard.propTypes = {\n  classes: PropTypes.object,\n  data: PropTypes.object,\n  unitFormat: PropTypes.string,\n  setSelectedWeatherDay: PropTypes.func,\n};\n\nconst mapStateToProps = ({ unitFormatReducers }) => ({\n  unitFormat: unitFormatReducers.unitFormat,\n});\n\nexport default withStyles(weatherCardStyles)(\n  connect(mapStateToProps, { setSelectedWeatherDay })(WeatherCard),\n);\n","export default {\n  weatherCard: {\n    marginBottom: '2rem',\n  }\n}","import axios from 'axios';\n\nimport * as API from '../api';\nimport {\n  REQUEST_START,\n  REQUEST_COMPLETE,\n  GET_WEATHER_DATA,\n  API_ERROR,\n  SET_RADIO_STATE,\n  SET_PAGE_NO,\n  GET_PAGINATED_WEATHER_DATA,\n  SET_SELECTED_WEATHER_DAY,\n} from './actionTypes';\n\nimport { recontructWeatherData } from '../utils';\n\nexport const requestStart = () => {\n  return { type: REQUEST_START };\n};\n\nexport const requestComplete = () => {\n  return { type: REQUEST_COMPLETE };\n};\n\nexport const getWeatherData = (unitFormat) => (dispatch) => {\n  dispatch(requestStart());\n  axios\n    .get(`${API.weatherApi}&units=${unitFormat}`)\n    .then((res) => {\n      const reconstructedWeatherData = recontructWeatherData(res.data.list);\n      dispatch({ type: GET_WEATHER_DATA, payload: reconstructedWeatherData });\n    })\n    .catch((err) => {\n      dispatch({ type: API_ERROR, payload: err });\n    })\n    .finally(() => {\n      dispatch(requestComplete());\n    });\n};\n\nexport const getPaginatedWeatherData = (paginatedWeatherData) => (dispatch) => {\n  dispatch({ type: GET_PAGINATED_WEATHER_DATA, payload: paginatedWeatherData });\n};\n\nexport const setRadioState = (state) => (dispatch) => {\n  dispatch({ type: SET_RADIO_STATE, payload: state });\n};\n\nexport const setPageNo = (pageNo) => (dispatch) => {\n  dispatch({ type: SET_PAGE_NO, payload: pageNo });\n};\n\nexport const setSelectedWeatherDay = (selectedWeather) => (dispatch) => {\n  dispatch({ type: SET_SELECTED_WEATHER_DAY, payload: selectedWeather });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n// Custom components\nimport WeatherCard from './components/WeatherCard';\n\n// Styles\nimport weatherCardLayoutStyles from './weatherCardLayoutStyles';\n\nconst WeatherCardLayout = ({ classes, data, pageNo }) => {\n  const mapDataToWeatherCard = (weatherData) => {\n    return weatherData.map((weatherObj) => {\n      return <WeatherCard key={weatherObj.date} data={weatherObj} />;\n    });\n  };\n\n  const renderWeatherCard =\n    data && data.length ? mapDataToWeatherCard(data[pageNo]) : null;\n\n  return (\n    <Container className={classes.layoutContainer}>\n      {renderWeatherCard}\n    </Container>\n  );\n};\n\nWeatherCardLayout.propTypes = {\n  classes: PropTypes.object,\n  data: PropTypes.array,\n  pageNo: PropTypes.number,\n};\n\nexport default withStyles(weatherCardLayoutStyles)(WeatherCardLayout);\n","export default {\n  layoutContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: '2rem',\n    flexWrap: 'wrap'\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Styles\nimport barComponentStyles from './barComponentStyles';\n\nconst BarComponent = ({ classes, data, unitFormat }) => {\n  const renderUnitFormat = unitFormat === 'imperial' ? 'F' : 'C';\n\n  const roundedTemp = Math.round(data.main.temp);\n  const chartPixel = unitFormat === 'imperial' ? 2.6 : 10;\n\n  const smallScreenSize = useMediaQuery('(max-width:500px)');\n  const barWidth = smallScreenSize ? '1.4rem' : '3rem';\n  const barText = smallScreenSize ? '0.6rem' : '1rem';\n\n  const customStyles = {\n    barStyles: {\n      width: barWidth,\n      height: `${roundedTemp * chartPixel}px`,\n    },\n    barText: {\n      fontSize: barText,\n    },\n  };\n\n  return (\n    <Grid className={classes.barComponentWrapper}>\n      <Box className={classes.barComponentContent}>\n        <Typography\n          style={customStyles.barText}\n          component='p'\n        >{`${roundedTemp}˚ ${renderUnitFormat}`}</Typography>\n        <Box\n          className={classes.barComponentBar}\n          style={customStyles.barStyles}\n        ></Box>\n        <Typography style={customStyles.barText} component='p'>\n          {data.time}\n        </Typography>\n      </Box>\n    </Grid>\n  );\n};\n\nBarComponent.propTypes = {\n  classes: PropTypes.object,\n  data: PropTypes.object,\n  unitFormat: PropTypes.string,\n};\n\nconst mapStateToProps = ({ unitFormatReducers }) => ({\n  unitFormat: unitFormatReducers.unitFormat,\n});\n\nexport default withStyles(barComponentStyles)(\n  connect(mapStateToProps)(BarComponent),\n);\n","export default {\n  barComponentWrapper: {\n    position: 'relative',\n    height: '12rem',\n    width: '6rem',\n    textAlign: 'center',\n  },\n  barComponentContent: {\n    position: 'absolute',\n    bottom: '0',\n    width: '100%',\n  },\n  barComponentBar: {\n    backgroundColor: '#3073B6',\n    margin: '0 auto',\n  },\n};\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// Custom Component\nimport BarComponent from './components/BarComponent';\n\n// Styles\nimport barChartStyles from './barChartStyles';\n\nconst BarChart = ({ classes, selectedWeatherDay, data }) => {\n  const formattedSelectedDay =\n    selectedWeatherDay && moment(selectedWeatherDay).format('LL');\n\n  const mapDataToBarComponent = (data, selectedWeatherDay) => {\n    for (let weatherObjByDay of data) {\n      if (weatherObjByDay.date === selectedWeatherDay) {\n        return weatherObjByDay.weatherDataByTime.map((weatherObjByTime) => {\n          return (\n            <BarComponent\n              key={weatherObjByTime.dt_txt}\n              data={weatherObjByTime}\n            />\n          );\n        });\n      }\n    }\n  };\n\n  const renderBarComponent =\n    data && data.length && selectedWeatherDay\n      ? mapDataToBarComponent(data, selectedWeatherDay)\n      : null;\n\n  return (\n    <Container className={classes.barChartContainer}>\n      <Grid className={classes.barChartTitleWrapper}>\n        <Typography className={classes.barCharTitle} component='h3'>\n          {formattedSelectedDay}\n        </Typography>\n      </Grid>\n      <Grid className={classes.barChartWrapper}>{renderBarComponent}</Grid>\n    </Container>\n  );\n};\n\nBarChart.propTypes = {\n  classes: PropTypes.object,\n  selectedWeatherDay: PropTypes.string,\n  data: PropTypes.array,\n};\n\nexport default withStyles(barChartStyles)(BarChart);\n","export default {\n  barChartContainer: {\n    margin: '4rem 0',\n  },\n  barChartTitleWrapper: {\n    textAlign: 'center',\n  },\n  barCharTitle: {\n    fontSize: '1.4rem',\n  },\n  barChartWrapper: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: '3rem',\n  },\n};\n","export const unitFormatOptions = [\n  {\n    value: 'metric',\n    label: 'Celsius',\n    labelPlacement: 'end',\n  },\n  {\n    value: 'imperial',\n    label: 'Fahrenheit',\n    labelPlacement: 'end',\n  },\n];","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\n// Actions\nimport {\n  getWeatherData,\n  getPaginatedWeatherData,\n  setRadioState,\n  setPageNo,\n} from '../../actions';\n\n// Custom components\nimport RadioGroupComponent from '../../components/RadioGroupComponent';\nimport PaginationButtons from '../../components/PaginationButtons';\nimport WeatherCardLayout from '../../components/WeatherCardLayout';\nimport BarChart from '../../components/BarChart';\n\n// Constants import\nimport { unitFormatOptions } from '../../constants';\n\nconst pageSize = 3;\n\nclass Main extends PureComponent {\n  componentDidMount() {\n    const { unitFormat, getWeatherData } = this.props;\n    if (unitFormat !== undefined && unitFormat.trim() !== '') {\n      getWeatherData(unitFormat);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Paginate data each time new weather data is passed\n    if (prevProps.weatherData !== this.props.weatherData) {\n      const paginatedWeatherData = this.constructPaginatedWeatherData(\n        this.props.weatherData,\n        pageSize,\n      );\n      this.props.getPaginatedWeatherData(paginatedWeatherData);\n    }\n  }\n\n  // Fn to set new radio state (unit format) and get new weather data from it\n  getNewWeatherData = (newUnitFormat) => {\n    const { setRadioState, getWeatherData } = this.props;\n    setRadioState(newUnitFormat);\n    getWeatherData(newUnitFormat);\n  };\n\n  // Fn to paginate weather arrays\n  constructPaginatedWeatherData = (weatherData, pageSize) => {\n    let paginatedWeatherData = [];\n    let dataPage = [];\n\n    for (let weatherObj of weatherData) {\n      if (dataPage.length === pageSize) {\n        paginatedWeatherData.push(dataPage);\n        dataPage = [];\n      }\n      dataPage.push(weatherObj);\n      if (weatherData.indexOf(weatherObj) === weatherData.length - 1) {\n        paginatedWeatherData.push(dataPage);\n      }\n    }\n\n    return paginatedWeatherData;\n  };\n\n  render() {\n    const {\n      unitFormat,\n      weatherData,\n      selectedWeatherDay,\n      paginatedWeatherData,\n      pageNo,\n      setPageNo,\n    } = this.props;\n\n    return (\n      <Container>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <RadioGroupComponent\n            radioOptions={unitFormatOptions}\n            selectedValue={unitFormat}\n            handleChangeState={this.getNewWeatherData}\n          />\n        </Grid>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <PaginationButtons\n            data={paginatedWeatherData}\n            pageNo={pageNo}\n            setPageNo={setPageNo}\n          />\n        </Grid>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <WeatherCardLayout data={paginatedWeatherData} pageNo={pageNo - 1} />\n        </Grid>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <BarChart\n            data={weatherData}\n            selectedWeatherDay={selectedWeatherDay}\n          />\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nMain.propTypes = {\n  weatherData: PropTypes.array,\n  paginatedWeatherData: PropTypes.array,\n  unitFormat: PropTypes.string,\n  pageNo: PropTypes.number,\n  getWeatherData: PropTypes.func,\n  getPaginatedWeatherData: PropTypes.func,\n  setRadioState: PropTypes.func,\n};\n\nconst mapStateToProps = ({\n  weatherReducers,\n  unitFormatReducers,\n  paginationReducers,\n}) => ({\n  weatherData: weatherReducers.weatherData,\n  paginatedWeatherData: weatherReducers.paginatedWeatherData,\n  unitFormat: unitFormatReducers.unitFormat,\n  pageNo: paginationReducers.pageNo,\n  selectedWeatherDay: weatherReducers.selectedWeatherDay,\n});\n\nexport default connect(mapStateToProps, {\n  getWeatherData,\n  getPaginatedWeatherData,\n  setRadioState,\n  setPageNo,\n})(Main);\n","import moment from 'moment';\n\n// Weather data from API reconstructed for grouping and easier access to data\nexport const recontructWeatherData = (weatherData) => {\n  let groupedWeatherData = [];\n  let dayWeatherData = [];\n\n  // Give date and time to each weather info object\n  const newWeatherData = weatherData.map((weatherObj) => {\n    const weatherObjDate = moment\n      .unix(weatherObj.dt)\n      .utc()\n      .format('YYYY-MM-DD');\n    const weatherObjTime = moment\n      .unix(weatherObj.dt)\n      .utc()\n      .format('HH:mm A');\n    weatherObj.date = weatherObjDate;\n    weatherObj.time = weatherObjTime;\n    return weatherObj;\n  });\n\n  // Group each weather obj by day\n  for (let weatherObj of newWeatherData) {\n    if (!dayWeatherData.length) {\n      dayWeatherData.push(weatherObj);\n    } else {\n      if (dayWeatherData[0].date === weatherObj.date) {\n        dayWeatherData.push(weatherObj);\n        if (newWeatherData.indexOf(weatherObj) === newWeatherData.length - 1) {\n          groupedWeatherData.push(dayWeatherData);\n        }\n      } else {\n        groupedWeatherData.push(dayWeatherData);\n        dayWeatherData = [];\n        dayWeatherData.push(weatherObj);\n      }\n    }\n  }\n\n  // Return the grouped arrays as objects for easier access to data\n  // Append useful information for each day\n  const finalWeatherData = groupedWeatherData.map((weatherArray) => {\n    let meanTemp = 0;\n    let meanHumidity = 0;\n    for (let weatherObj of weatherArray) {\n      meanTemp += weatherObj.main.temp;\n      meanHumidity += weatherObj.main.humidity;\n    }\n    meanTemp = meanTemp / weatherArray.length;\n    meanHumidity = meanHumidity / weatherArray.length;\n    meanTemp = Math.round(meanTemp);\n    meanHumidity = Math.round(meanHumidity);\n    return {\n      date: weatherArray[0].date,\n      meanTemp,\n      meanHumidity,\n      weatherDescription: weatherArray[0].weather[0].main,\n      weatherDataByTime: weatherArray,\n    };\n  });\n\n  return finalWeatherData;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport store from './store';\n\n// Custom components\nimport AppContainer from '../views/AppContainer';\nimport Main from '../views/Main';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <AppContainer>\n            <Route exact path='/' component={Main} />\n          </AppContainer>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}